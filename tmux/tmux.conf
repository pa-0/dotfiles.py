##################################
#    _                           #
#   | |_ _ __ ___  _   ___  __   #
#   | __| '_ ` _ \| | | \ \/ /   #
#   | |_| | | | | | |_| |>  <    #
#    \__|_| |_| |_|\__,_/_/\_\   #
#                                #
##################################

# TODO: Figure out how to configure alacritty to work with tmux using the
# current bindings.

set-option -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# Options
set-option -sg escape-time 0
set-option -g history-limit 25000
set-option -g renumber-windows on

set -g focus-events on
setw -g mouse on
setw -g aggressive-resize on
setw -g mode-keys vi

# Status bar
set -g base-index 1
setw -g pane-base-index 1
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'

set -g status on
set -g status-position top
set -g status-justify left
set -g status-style bg=black,fg=white

set -g status-left "#[bg=purple,fg=brightblack]  #[fg=gray,bg=purple]#S #[fg=purple,bg=black]"
set -g status-left-length 50

set -g status-right "#{prefix_highlight} #[bg=black,fg=purple]#[bg=purple,fg=gray] %H:%M#[bg=purple,fg=brightblack]  "
set -g status-right-length 50

set -g @prefix_highlight_fg 'cyan'
set -g @prefix_highlight_bg 'black'

set -g window-status-current-format "#[fg=purple]#[fg=gray,bg=purple] #I: #W #[fg=purple,bg=black]"
set -g window-status-format "#[fg=black]#[fg=white,bg=black] #I: #W #[fg=black,bg=black]"
set -g window-status-separator ""

set -g pane-border-style bg=default,fg=brightblack
set -g pane-active-border-style bg=default,fg=purple
set -g display-panes-colour black
set -g display-panes-active-colour brightblack

# Key bindings
bind 0 select-window -t :0
bind 1 select-window -t :1
bind 2 select-window -t :2
bind 3 select-window -t :3
bind 4 select-window -t :4
bind 5 select-window -t :5
bind 6 select-window -t :6
bind 7 select-window -t :7
bind 8 select-window -t :8
bind 9 select-window -t :9
bind r source-file $DOTFILES/tmux/tmux.conf \; display "Config reloaded!"

bind-key -n  M-n new-window
bind-key -n  M-s split-window -v -c "#{pane_current_path}"
bind-key -n  M-S split-window -v -c "#{pane_current_path}" -l 20
bind-key -n  M-v split-window -h -c "#{pane_current_path}"

bind-key -n  M-x confirm-before "kill-pane"
bind-key -n  M-X confirm-before "kill-window"

bind-key -n M-h select-window -p
bind-key -n M-l select-window -n
bind-key -n M-C-h swap-window -t -1\; select-window -t -1
bind-key -n M-C-l swap-window -t +1\; select-window -t +1
bind-key -n M-Tab last-window

bind-key -n M-T set-option -g status

bind b break-pane

# Vim-style visual mode
bind-key -n M-Escape copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xsel -poa)\"; tmux paste-buffer"

unbind -T copy-mode-vi MouseDragEnd1Pane

# Pane switching
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Pane resizing
bind-key -n M-z resize-pane -Z
bind-key -n M-H resize-pane -L 5
bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-L resize-pane -R 5

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @continuum-restore 'on'

run -b '~/.tmux/plugins/tpm/tpm'
