#  _ _____
# (_)___ /
# | | |_ \
# | |___) |
# |_|____/
#
# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Startup
exec --no-startup-id "$DOTFILES/bin/autostart.sh"
exec_always --no-startup-id "$DOTFILES/bin/autostart_always.sh"

# Var
set $DOTFILES $HOME/.config/dotfiles
set $TERMINAL wezterm
set $BROWSER chromium-browser

# Super key
set $mod Mod4
set $left  h
set $down  j
set $up    k
set $right l

# Apps
bindsym $mod+Return "exec --no-startup-id $TERMINAL"
bindsym $mod+BackSpace "exec --no-startup-id $BROWSER"

# Management
# bindsym $mod+space exec
bindsym $mod+control+d exec "$DOTFILES/bin/rofi.sh"
bindsym $mod+control+shift+d exec dmenu_run -fn 'comicmono-14'
bindsym $mod+control+shift+p exec --no-startup-id arandr
bindsym $mod+control+q exec --no-startup-id "$DOTFILES/bin/lock.sh"
bindsym $mod+control+Shift+q exec --no-startup-id "$DOTFILES/bin/powermenu.sh"

# System
bindsym $mod+control+w kill
bindsym $mod+control+e fullscreen toggle
bindsym $mod+control+r reload
bindsym $mod+control+Shift+r restart

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+control+u layout toggle split
bindsym $mod+control+i layout stacking
bindsym $mod+control+o layout tabbed
bindsym $mod+control+Shift+i split v
bindsym $mod+control+Shift+o split h

# toggle tiling / floating
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
bindsym $mod+control+t floating toggle
bindsym $mod+control+y focus mode_toggle

# change focus
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+control+$left  move left
bindsym $mod+control+$down  move down
bindsym $mod+control+$up    move up
bindsym $mod+control+$right move right

# Resize windows
bindsym $mod+Shift+$left  resize shrink width 5 px or 5 ppt
bindsym $mod+Shift+$down  resize grow height 5 px or 5 ppt
bindsym $mod+Shift+$up    resize shrink height 5 px or 5 ppt
bindsym $mod+Shift+$right resize grow width 5 px or 5 ppt

# Media
bindsym XF86AudioRaiseVolume exec "$DOTFILES/bin/volume_brightness.sh volume_up"
bindsym XF86AudioLowerVolume exec"$DOTFILES/bin/volume_brightness.sh volume_down"
bindsym XF86AudioMute exec "$DOTFILES/bin/volume_brightness.sh volume_mute"
bindsym XF86AudioStop exec "playerctl stop"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioNext exec "playerctl next"


# Do not wrap on focus
focus_wrapping no

# Define floating windows
for_window [class="feh"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="TelegramDesktop"] floating enable

# Window decoration
client.background #414868
# class                  border  backgr  text    indicator child_border
client.focused           #9aa5ce #364A82 #c0caf5 #9aa5ce   #9aa5ce
client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d

hide_edge_borders smart
for_window [class="^.*"] border pixel 2

# Font for window titles.
font pango:comicmono-14 10

# Displays
set $LAPTOP_SCREEN "eDP-1"
set $MAIN_SCREEN "HDMI-1"

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Move to workspace
bindsym $mod+mod1+$right workspace next
bindsym $mod+mod1+$left workspace prev
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+a workspace $ws1
bindsym $mod+s workspace $ws2
bindsym $mod+d workspace $ws3
bindsym $mod+f workspace $ws4
bindsym $mod+g workspace $ws5
bindsym $mod+y workspace $ws6
bindsym $mod+u workspace $ws7
bindsym $mod+i workspace $ws8
bindsym $mod+o workspace $ws9
bindsym $mod+p workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+a move container to workspace $ws1
bindsym $mod+Shift+s move container to workspace $ws2
bindsym $mod+Shift+d move container to workspace $ws3
bindsym $mod+Shift+f move container to workspace $ws4
bindsym $mod+Shift+g move container to workspace $ws5
bindsym $mod+Shift+y move container to workspace $ws6
bindsym $mod+Shift+u move container to workspace $ws7
bindsym $mod+Shift+i move container to workspace $ws8
bindsym $mod+Shift+o move container to workspace $ws9
bindsym $mod+Shift+p move container to workspace $ws10


workspace $ws1 output $MAIN_SCREEN
workspace $ws2 output $MAIN_SCREEN
workspace $ws3 output $MAIN_SCREEN
workspace $ws4 output $MAIN_SCREEN
workspace $ws5 output $LAPTOP_SCREEN
workspace $ws6 output $MAIN_SCREEN
workspace $ws7 output $MAIN_SCREEN
workspace $ws8 output $MAIN_SCREEN
workspace $ws9 output $MAIN_SCREEN
workspace $ws10 output $MAIN_SCREEN
